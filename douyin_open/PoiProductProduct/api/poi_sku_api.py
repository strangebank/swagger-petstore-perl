# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from douyin_open.PoiProductProduct.api_client import ApiClient


class PoiSkuApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def poi_ext_hotel_sku_get(self, spu_ext_id, start_date, end_date, **kwargs):  # noqa: E501
        """sku拉取(该接口由接入方实现)  # noqa: E501

        # 该接口由接入方实现   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.poi_ext_hotel_sku_get(spu_ext_id, start_date, end_date, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param list[str] spu_ext_id: 接入方SPU ID 列表 (required)
        :param str start_date: 拉取价格时间区间[start_date, end_date) (required)
        :param str end_date: 拉取价格时间区间[start_date, end_date) (required)
        :return: InlineResponse2003
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.poi_ext_hotel_sku_get_with_http_info(spu_ext_id, start_date, end_date, **kwargs)  # noqa: E501
        else:
            (data) = self.poi_ext_hotel_sku_get_with_http_info(spu_ext_id, start_date, end_date, **kwargs)  # noqa: E501
            return data

    def poi_ext_hotel_sku_get_with_http_info(self, spu_ext_id, start_date, end_date, **kwargs):  # noqa: E501
        """sku拉取(该接口由接入方实现)  # noqa: E501

        # 该接口由接入方实现   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.poi_ext_hotel_sku_get_with_http_info(spu_ext_id, start_date, end_date, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param list[str] spu_ext_id: 接入方SPU ID 列表 (required)
        :param str start_date: 拉取价格时间区间[start_date, end_date) (required)
        :param str end_date: 拉取价格时间区间[start_date, end_date) (required)
        :return: InlineResponse2003
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['spu_ext_id', 'start_date', 'end_date']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method poi_ext_hotel_sku_get" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'spu_ext_id' is set
        if ('spu_ext_id' not in params or
                params['spu_ext_id'] is None):
            raise ValueError("Missing the required parameter `spu_ext_id` when calling `poi_ext_hotel_sku_get`")  # noqa: E501
        # verify the required parameter 'start_date' is set
        if ('start_date' not in params or
                params['start_date'] is None):
            raise ValueError("Missing the required parameter `start_date` when calling `poi_ext_hotel_sku_get`")  # noqa: E501
        # verify the required parameter 'end_date' is set
        if ('end_date' not in params or
                params['end_date'] is None):
            raise ValueError("Missing the required parameter `end_date` when calling `poi_ext_hotel_sku_get`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'spu_ext_id' in params:
            query_params.append(('spu_ext_id', params['spu_ext_id']))  # noqa: E501
            collection_formats['spu_ext_id'] = 'multi'  # noqa: E501
        if 'start_date' in params:
            query_params.append(('start_date', params['start_date']))  # noqa: E501
        if 'end_date' in params:
            query_params.append(('end_date', params['end_date']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/poi/ext/hotel/sku/', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='InlineResponse2003',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)
