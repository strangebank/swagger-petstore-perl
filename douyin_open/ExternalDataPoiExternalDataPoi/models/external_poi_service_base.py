# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class ExternalPoiServiceBase(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        '_date': 'str',
        'exposure_uv': 'int',
        'click_uv': 'int',
        'success_order_cnt': 'int'
    }

    attribute_map = {
        '_date': 'date',
        'exposure_uv': 'exposure_uv',
        'click_uv': 'click_uv',
        'success_order_cnt': 'success_order_cnt'
    }

    def __init__(self, _date=None, exposure_uv=None, click_uv=None, success_order_cnt=None):  # noqa: E501
        """ExternalPoiServiceBase - a model defined in Swagger"""  # noqa: E501
        self.__date = None
        self._exposure_uv = None
        self._click_uv = None
        self._success_order_cnt = None
        self.discriminator = None
        if _date is not None:
            self._date = _date
        if exposure_uv is not None:
            self.exposure_uv = exposure_uv
        if click_uv is not None:
            self.click_uv = click_uv
        if success_order_cnt is not None:
            self.success_order_cnt = success_order_cnt

    @property
    def _date(self):
        """Gets the _date of this ExternalPoiServiceBase.  # noqa: E501

        日期  # noqa: E501

        :return: The _date of this ExternalPoiServiceBase.  # noqa: E501
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this ExternalPoiServiceBase.

        日期  # noqa: E501

        :param _date: The _date of this ExternalPoiServiceBase.  # noqa: E501
        :type: str
        """

        self.__date = _date

    @property
    def exposure_uv(self):
        """Gets the exposure_uv of this ExternalPoiServiceBase.  # noqa: E501

        曝光uv  # noqa: E501

        :return: The exposure_uv of this ExternalPoiServiceBase.  # noqa: E501
        :rtype: int
        """
        return self._exposure_uv

    @exposure_uv.setter
    def exposure_uv(self, exposure_uv):
        """Sets the exposure_uv of this ExternalPoiServiceBase.

        曝光uv  # noqa: E501

        :param exposure_uv: The exposure_uv of this ExternalPoiServiceBase.  # noqa: E501
        :type: int
        """

        self._exposure_uv = exposure_uv

    @property
    def click_uv(self):
        """Gets the click_uv of this ExternalPoiServiceBase.  # noqa: E501

        点击uv  # noqa: E501

        :return: The click_uv of this ExternalPoiServiceBase.  # noqa: E501
        :rtype: int
        """
        return self._click_uv

    @click_uv.setter
    def click_uv(self, click_uv):
        """Sets the click_uv of this ExternalPoiServiceBase.

        点击uv  # noqa: E501

        :param click_uv: The click_uv of this ExternalPoiServiceBase.  # noqa: E501
        :type: int
        """

        self._click_uv = click_uv

    @property
    def success_order_cnt(self):
        """Gets the success_order_cnt of this ExternalPoiServiceBase.  # noqa: E501

        订房成交次数  # noqa: E501

        :return: The success_order_cnt of this ExternalPoiServiceBase.  # noqa: E501
        :rtype: int
        """
        return self._success_order_cnt

    @success_order_cnt.setter
    def success_order_cnt(self, success_order_cnt):
        """Sets the success_order_cnt of this ExternalPoiServiceBase.

        订房成交次数  # noqa: E501

        :param success_order_cnt: The success_order_cnt of this ExternalPoiServiceBase.  # noqa: E501
        :type: int
        """

        self._success_order_cnt = success_order_cnt

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ExternalPoiServiceBase, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ExternalPoiServiceBase):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
